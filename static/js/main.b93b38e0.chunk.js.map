{"version":3,"sources":["BooksAPI.js","components/Switcher.js","components/Book.js","components/Shelf.js","components/Footer.js","components/Mainpage.js","components/Searchpage.js","App.js","serviceWorker.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","Switcher","props","react_default","a","createElement","className","onChange","event","changeShelf","target","value","disabled","Book","components_Switcher","onshelf","src","imageLinks","smallThumbnail","alt","title","authors","join","publishedDate","Shelf","children","filter","map","key","components_Book","Footer","react_router_dom","to","Mainpage","components_Shelf","components_Footer","Searchpage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","apibooks","search","query","_this2","setState","error","assignShelfById","dat","bo","catch","console","log","_this3","type","placeholder","handleSearch","apibook","length","undefined","Component","App","BooksAPI","react_router","exact","path","render","components_Mainpage","components_Searchpage","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b93b38e0.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\nfunction Switcher(props) {\n  return (\n    <div className=\"switcher switcher-icon\">\n      <select onChange={(event) =>\n        props.changeShelf(props.book, event.target.value)}\n      // current value of the book's shelf\n      // added for Search page to have default shelf-value for searched book\n        value={props.book.shelf || 'none'}\n      >\n      <option value=\"move\" disabled>JUMP to...</option>\n      <option value=\"currentlyReading\">Reading Right Now</option>\n      <option value=\"wantToRead\">Desire To Read</option>\n      <option value=\"read\">Just Finished</option>\n      <option value=\"none\">None</option>\n      </select>\n    </div>\n    )\n}\n\nexport default Switcher;\n\n// error - I forget pass props!!!             >\n// missing Book component in switcher to pass down\n\n\n// import React, { Component } from 'react';\n// class Switcher extends Component {\n\n//   render() {\n//     return (\n//       <div className=\"switcher\">\n//       <select onChange={(event) => this.props.changeShelf(this.props.book, event.target.value )}\n//         value={this.props.book.shelf}\n//       >\n//       <option value=\"move\" disabled>Move to...</option>\n//       <option value=\"currentlyReading\">Currently Reading</option>\n//       <option value=\"wantToRead\">Want to Read</option>\n//       <option value=\"read\">Read</option>\n//       <option value=\"none\">None</option>\n//       </select>\n//       </div>\n//     )\n//   }\n// }\n","import React from 'react';\nimport Switcher from './Switcher';\n\nfunction Book(props) {\n  const placeholder = \"http://via.placeholder.com/128x193?text=No%20Cover\";\n\n  return (\n    <div className=\"book\">\n      <Switcher\n        changeShelf={props.changeShelf}\n        onshelf={props.onshelf}\n        book={props.book} // forget to add book id does not work in Switcher\n      />\n\n      <div>\n      <img src={props.book.imageLinks ? props.book.imageLinks.smallThumbnail : `${placeholder}`}\n          alt={props.book.title}/>\n      </div>\n      <div className=\"book-title\">\n        {props.book.title}\n      </div>\n      <div className=\"book-author\">\n       {props.book.authors ? props.book.authors.join(' | ') : ''}\n      </div>\n      <div className=\"book-title\">\n        {props.book.publishedDate}\n      </div>\n    </div>\n    )\n}\n\nexport default Book;\n\n// Take away iteration - now iterate through in Shelf\n // {props.books.map(book => (\n //  <li key={book.id}>\n //    <div className=\"book\">\n //        <div\n //          style={{ width: 128,\n //            height: 193,\n //            /*'url(\"http\")'*/\n //            backgroundImage: `url(\"${book.imageLinks.smallThumbnail}\")` }}>\n //        </div>\n //        <div className=\"book-title\">{book.title}</div>\n //        <div className=\"book-author\">{book.authors}</div>\n //      </div>\n //  </li>\n //  ))}\n\n// backgroundImage:`url(${book.imageLinks && book.imageLinks.thumbnail?`${book.imageLinks.thumbnail}`:`http://via.placeholder.com/128x193?text=No%20Cover`})`\n","import React from 'react';\nimport Book from './Book';\n\nfunction Shelf(props) {\n  return (\n    <div className=\"shelf\">\n      {/* replace hardcoded text by props shelf Currently Reading ...*/}\n      {/* props.children display CONTENT between opening/closing component tag */}\n      <h2 className=\"shelf-title\">{props.children}</h2>\n      <ul className=\"books-template\">\n    {/*display books to the right shelf*/}\n\n        {props.books.filter(book => book.shelf === props.onshelf)\n        .map(book => (\n            <li key={book.id}>\n              <Book\n                book={book}\n                changeShelf={props.changeShelf}\n                onshelf={props.onshelf}\n              />\n            </li>\n            ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default Shelf;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n// on main page 3 shelves\nfunction Footer() {\n  return(\n    <footer>\n        <p>@2018 Created by\n          <Link to=\"https://github.com/illyShelly\"\n          className=\"footer-link\"> <i>illyShelly </i></Link>\n        </p>\n        </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Shelf from './Shelf';\nimport Footer from './Footer';\n\n// on main page 3 shelves\nfunction Mainpage(props) {\n  return(\n    <div>\n      <Shelf\n        books={props.books}\n        changeShelf={props.changeShelf}\n        onshelf=\"currentlyReading\"\n        >Reading Right Now</Shelf>\n      <Shelf\n        books={props.books}\n        changeShelf={props.changeShelf}\n        onshelf=\"wantToRead\"\n        >Desire To Read</Shelf>\n      <Shelf\n        books={props.books}\n        changeShelf={props.changeShelf}\n        onshelf=\"read\"\n        >Just Finished</Shelf>\n        <Footer />\n    </div>\n  )\n}\n\nexport default Mainpage;\n","import React, { Component } from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from './Book';\n// import Shelf from './Shelf';\n\n\nclass Searchpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apibooks: [], // data get from Api search method\n      search: '' // at the beggining empty string\n    }\n  }\n  // 1. handle event from input search\n  // 2. method get API data - display all when search\n    //  - promise all OK / catch error\n    //  - change state for search string\n  // 3. solving if/else statement - when search input is empty - deleted\n  // 4. display all books on search page with assigning shelf value\n    // - compare book.id with apibook.id from data\n    // - when match -> assign book.shelf value to searched book's shelf\n // 5. solve default shelf for data apibooks - in Switcher\n\n  handleSearch(event) {\n    if(event) {\n    // change state when search input contain any string/letter\n      this.setState({\n      search: event\n     });\n     // console.log(event) // shows typed string\n     BooksAPI.search(event)\n     // receive data matched search input string\n    .then(data => {\n            // console.log(data)\n            // console.log(data.map(dat => dat.shelf)) // testing array of objects\n            // console.log(this.props.books.map(book => book.id) + \" from main\");\n    // Review = SOLVING GIBBERISH in search input\n      if(data.error) {\n        this.setState({\n          apibooks: []\n        });\n      }\n      else {\n        let assignShelfById = data.filter(dat => (this.props.books.filter((book) => book.id === dat.id).map(bo => dat.shelf = bo.shelf)));\n        this.setState(\n        // { apibooks: data })\n        { apibooks: assignShelfById });\n      }\n    })\n    // when search input is empty -> cannot read property .map\n    .catch(error =>\n      console.log(error + \" something went wrong\"));\n    }\n    // no searching string\n    // delete string from input search - back to empty state => no error .map\n    else {\n      this.setState({\n        search: '',\n        apibooks: []\n      })\n    }\n }\n\n  render() {\n    return(\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by author or title of the book ...\"\n          onChange={(event) => this.handleSearch(event.target.value)}\n          // onChange={this.handleSearch}\n          value={this.state.search}\n        />\n        {/*needs to be above - otherwise - each book is in <ul>*/}\n        <ul className=\"books-template\">\n            {this.state.apibooks.map((apibook) =>\n              <li key={apibook.id}>\n                <Book\n                  book={apibook}\n                  changeShelf={this.props.changeShelf}\n                />\n              </li>\n            )}\n        </ul>\n\n        {/*when content is in search, searched book has error => empty []*/}\n        {(this.state.search !== '') ?\n          this.state.apibooks.length === 0 && (<h2 className=\"alert-logo\">@no existing book@</h2>)\n          : undefined}\n    </div>\n    )\n  }\n}\n\nexport default Searchpage;\n\n// (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n// 0: {title: \"Experience And Education\", authors: Array(1), publisher: \"Simon and Schuster\", publishedDate: \"2007-11-01\", description: \"Experience and Education is the best concise state… historical and social, both orderly and dynamic.\", …\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport * as BooksAPI from './BooksAPI';\nimport Mainpage from './components/Mainpage';\nimport Searchpage from './components/Searchpage';\n\nclass App extends Component {\n  state = {\n    // testbooks: [\"how\", \"are\", \"you\", \"all\"],\n    books: []\n  }\n\n  // fetch book from API\n  componentDidMount() {\n    BooksAPI.getAll()\n    .then(data => {\n      // check contains of data\n      // console.log(data);\n      this.setState({ books: data })\n    })\n    .catch(error => console.log(error + \" this error happend\"))\n  }\n\n  // update state when calling event method on switcher\n  // without refresh method -> pass other promise\n  // pass the method as props through the app\n  changeShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n    .then(() => {\n      console.log(` \"${book.title}\" moving to: \"${shelf}\" `);\n      BooksAPI.getAll()\n      .then((books) => {\n        this.setState({books: books})\n      })\n    })\n    .catch(error => console.log(error + \" this error happend\"));\n  }\n\n\n// do not write (book) => {} wrong syntax\n// Each child in an array unique \"key\" prop.\n// id looks like: id: \"nggnmAEACAAJ\"\n  render() {\n    return (\n      <div className=\"App\">\n        <nav>\n          <Link to=\"/\" className=\"nav-link\">HOME</Link>\n          <h1>MyReads</h1>\n          <Link to=\"/search\"\n          className=\"nav-link\"><span>+</span> Add book</Link>\n        </nav>\n\n         {/*<p>{this.state.testbooks[0]}</p> */}\n             <Route exact path='/' render={() => (\n                <Mainpage\n                  books={this.state.books}\n                  changeShelf={this.changeShelf}\n                />\n              )}\n              />\n            {/* <Book books={this.state.books} />*/}\n            <Route exact path='/search' render={() => (\n              <Searchpage\n                  // books={this.state.books}\n                  changeShelf={this.changeShelf}\n                  books={this.state.books}\n                />\n              )}\n            />\n      {/*<footer>\n        <p>Created by:\n          <Link to=\"https://github.com/illyShelly\"\n          className=\"footer-link\"> <i>illyShelly</i></Link>\n        </p>\n        </footer>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// allowAnonLogging: true\n// authors: [\"William E. Shotts, Jr.\"]\n// averageRating: 4\n// canonicalVolumeLink: \"https://market.android.com/details?id=book-nggnmAEACAAJ\"\n// categories: [\"COMPUTERS\"]\n// contentVersion: \"1.2.2.0.preview.2\"\n// description: \"You've experienced the shiny, point-and-click surface of your Linux computer—now dive below and explore its depths with the power of the command line. The Linux Command Line takes you from your very first terminal keystrokes to writing full programs in Bash, the most popular Linux shell. Along the way you'll learn the timeless skills handed down by generations of gray-bearded, mouse-shunning gurus: file navigation, environment configuration, command chaining, pattern matching with regular expressions, and more. In addition to that practical knowledge, author William Shotts reveals the philosophy behind these tools and the rich heritage that your desktop Linux machine has inherited from Unix supercomputers of yore. As you make your way through the book's short, easily-digestible chapters, you'll learn how to: * Create and delete files, directories, and symlinks * Administer your system, including networking, package installation, and process management * Use standard input and output, redirection, and pipelines * Edit files with Vi, the world’s most popular text editor * Write shell scripts to automate common or boring tasks * Slice and dice text files with cut, paste, grep, patch, and sed Once you overcome your initial \"shell shock,\" you'll find that the command line is a natural and expressive way to communicate with your computer. Just don't be surprised if your mouse starts to gather dust. A featured resource in the Linux Foundation's \"Evolution of a SysAdmin\"\"\n// id: \"nggnmAEACAAJ\"\n// imageLinks: {smallThumbnail: \"http://books.google.com/books/content?id=nggnmAEAC…J&printsec=frontcover&img=1&zoom=5&source=gbs_api\", thumbnail: \"http://books.google.com/books/content?id=nggnmAEAC…J&printsec=frontcover&img=1&zoom=1&source=gbs_api\"}\n// industryIdentifiers: (2) [{…}, {…}]\n// infoLink: \"https://play.google.com/store/books/details?id=nggnmAEACAAJ&source=gbs_api\"\n// language: \"en\"\n// maturityRating: \"NOT_MATURE\"\n// pageCount: 480\n// panelizationSummary: {containsEpubBubbles: false, containsImageBubbles: false}\n// previewLink: \"http://books.google.com/books?id=nggnmAEACAAJ&dq=linux&hl=&cd=3&source=gbs_api\"\n// printType: \"BOOK\"\n// publishedDate: \"2012\"\n// publisher: \"No Starch Press\"\n// ratingsCount: 2\n// readingModes: {text: true, image: false}\n// shelf: \"currentlyReading\"\n// subtitle: \"A Complete Introduction\"\n// title: \"The Linux Command Line\"\n// __proto__: Object\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { HashRouter as Router } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n  // <Router><App /></Router>, document.getElementById('root'));\n  <HashRouter><App /></HashRouter>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}